<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lrrc.Sys.Data</name>
    </assembly>
    <members>
        <member name="T:Lrrc.Sys.Data.XmlHistory">
            <summary>
            Administración de Historiales de Bases de Datos.
            Author: Luis R. Romero Castillo
            Owner: Luis R. Romero Castillo
            </summary>
        </member>
        <member name="T:Lrrc.Sys.Data.Command">
            <summary>
            Objeto Command. Administrador de Objetos de la Capa de Datos.
            Author: Luis R. Romero Castillo
            Owner: Luis R. Romero Castillo
            </summary>
        </member>
        <member name="T:Lrrc.Sys.Data.Adapter">
            <summary>
            Objeto Adaptador de Conexiones.
            Author: Luis R. Romero Castillo
            Owner: Luis R. Romero Castillo
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter.#ctor(Lrrc.Sys.Data.Connection@)">
            <summary>
            Crea una instancia tipo Adapter.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter.EjecutarSinQuery(Lrrc.Sys.Data.Interface.IDelCommand)">
            <summary>
            Ejecuta el método ExecuteNonQuery del DelCommand.
            </summary>
            <param name="Comando">Implementación de Objeto Tipo IDelCommand</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter.CrearEsquema(Lrrc.Sys.Data.Interface.IGetCommand)">
            <summary>
            Ejecuta el adaptador y crea el esquema de columnas de la tabla requerida por el objeto Command.
            </summary>
            <param name="Comando">IGetCommand</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter.Llenar(Lrrc.Sys.Data.Interface.IGetCommand,System.Boolean)">
            <summary>
            Ejecuta el adaptador, llena un objeto DataTable y lo retorna con los resultados de la ejecución.
            </summary>
            <param name="Comando">Objeto Command Activo</param>
            <param name="UsarDataSet">Indica al Adapter si los resultados de la búsqueda se reflejarán sobre el DataSet. Sólo ejecutorio para aquellos DataTables con esquemas de columnas definidos en el DataSet.</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter.Actualizar(Lrrc.Sys.Data.Interface.IPutCommand)">
            <summary>
            Ejecuta el método Update del DataAdapter contra la conexión de base de datos establecida. Este método trabaja con transacciones con un nivel de isolación Serializable.
            El SqlCommand utilizado por este método es el PutCommand, el cual debe ser funcional para cualquier actualización.
            </summary>
            <param name="Comando">Objeto Conectividad.System.Data.Command</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter.Actualizar(Lrrc.Sys.Data.Interface.IPutCommand,System.Boolean)">
            <summary>
            Ejecuta el método Update del DataAdapter contra la conexión de base de datos establecida. 
            Este método trabaja con transacciones con un nivel de isolación Serializable.
            El SqlCommand utilizado por este método es el PutCommand, el cual debe ser funcional para 
            cualquier actualización.
            </summary>
            <param name="Comando">Implementación de Interfaz IPutCommand</param>
            <param name="ConHistorial">Determina si se escribe el historial de actualizaciones</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter._rowupdadated(System.Object,System.Data.SqlClient.SqlRowUpdatedEventArgs)">
            <summary>
            Evento para sincronización de filas hijas.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Adapter.InDataSet(System.String)">
            <summary>
            Retorna un valor lógico que indica si el nombre de la tabla se encuentra
            en la colección del DataSet.
            </summary>
            <param name="Tabla">Nombre de Tabla</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Lrrc.Sys.Data.Adapter.GetConnection">
            <summary>
            Obtiene el objeto Connection pasado por referencia.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Adapter.DataSet">
            <summary>
            Obtiene o establece un objeto tipo SqlDataAdapter.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Adapter.Conciliada">
            <summary>
            Obtiene el valor que determina si se produjo una inserción de información.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Adapter.ValorConciliacion">
            <summary>
            Obtiene el valor establecido en la columna Pk de la tabla Parent al momento de producirse una conciliación
            entre padre e hijos.
            En caso de no haberse producido conciliación alguna retorna un valor null.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.#ctor(Lrrc.Sys.Data.Connection@)">
            <summary>
            Crea una instancia tipo Command.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.ImportarTabla(System.Data.DataTable)">
            <summary>
            Importa un objeto DataTable con todas sus filas hacia un DataTable existente en el DataSet activo.
            De manera absoluta, este método considera a la Columna Accion, la cual es la que determina el tipo
            de operación que se realiza al momento de ejecutarse contra la base de datos.
            Por defecto, al momento de utilizar este método, esta columna se llena con un valor 2 (Actualización).
            </summary>
            <param name="Tabla">DataTable en Memoria</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.InitPutCommand">
            <summary>
            Método virtual para inicializar o configurar el SqlCommand dedicado a actualizaciones en la base de datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.InitGetCommand">
            <summary>
            Método virtual para inicializar o configurar el SqlCommand dedicado a lecturas en la base de datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.InitDelCommand">
            <summary>
            Método virtual para inicializar o configurar el SqlCommand dedicado a eliminaciones en la base de datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.CargarEsquema">
            <summary>
            Retorna una objeto DataTable con el esquema de datos de la tabla especificada.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.Relacionar(System.String,System.String,System.String)">
            <summary>
            Establece la relación entre dos tablas (Master/Detail) de un mismo objeto DataSet.
            </summary>
            <param name="Relacion">Nombre de la Relación</param>
            <param name="ChildTableName">Nombre de la Tabla Hija</param>
            <param name="ChildColumnName">Nombre de la Columna de la Tabla Hija</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.Relacionar(System.String,Lrrc.Sys.Data.Interface.ICommand)">
            <summary>
            Establece la relación entre dos tablas (Master/Detail) de un mismo objeto DataSet.
            </summary>
            <param name="Relacion">Nombre de la Relación</param>
            <param name="Detalle">Implementación del Objeto ICommand</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.Relacionar(System.String,Lrrc.Sys.Data.Interface.ICommand,System.String)">
            <summary>
            Establece la relación entre dos tablas (Master/Detail) de un mismo objeto DataSet.
            </summary>
            <param name="Relacion">Nombre de la Relación</param>
            <param name="Detalle">Implementación del Objeto ICommand</param>
            <param name="ColumnasHijas">String con los nombres de columnas, separados por ",", que serán utilizados en la relación</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.CrearRelacion(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)">
            <summary>
            Crea las relaciones entre uno o mas objetos Datatable.
            </summary>
            <param name="Nombre">Nombre de la Relación</param>
            <param name="parentColumn">Columna Padre</param>
            <param name="childColumn">Columna Hija</param>
            <param name="Anidar">Determina si se anida la relación</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.NuevaFila">
            <summary>
            Crea  un nuevo DataRow de la tabla establecida en el Command.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.InsertarFila">
            <summary>
            Inserta una nueva fila en la tabla establecida en el Objeto Command activo.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.InsertarFila(System.Boolean)">
            <summary>
            Inserta una nueva fila en la tabla establecida en el Objeto Command activo.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.InsertarFila(System.Boolean,System.Boolean)">
            <summary>
            Inserta una nueva fila en la tabla establecida en el Objeto Command activo.
            <param name="Verificar">Verifica si la fila existe en la colección de DataRows del DataTable</param>
            <param name="Validar">Determina si la vila debe ejecutar las reglas de insersión de la capa de datos.</param>
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.EliminarFila(System.Object)">
            <summary>
            Marca como eliminada una fila de la colección de la tabla establecida en el Command.
            Este método considera la generación de excepciones en caso de error o violaciones de Constraints.
            </summary>
            <param name="PkValue">Código del Registro</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.EliminarFila(System.Object,System.Boolean)">
            <summary>
            Marca como eliminada una fila de la colección de la tabla establecida en el Command.
            </summary>
            <param name="PkValue">Código del Registro</param>
            <param name="DispararExcepcion">Disparar Exepción en caso de error</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.EliminarFilasHijas">
            <summary>
            Determina si la fila activa tiene relaciones descendientes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.ObtenerFila(System.Object)">
            <summary>
            Obtiene un objeto DataRow a partir de la llave suministrada.
            </summary>
            <param name="Llave">Object con la llave de la fila</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.ValidarFila">
            <summary>
            Realiza las validaciones de cada columna de la fila indicada.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.FilaEncontrada">
            <summary>
            Realiza una búsqueda en el objeto Command activo para determinar si existe una fila que cumpla con la condición especificada.
            Esta implementación se hace como resultado de que la creación de Unique y NonUnique Index no es permitida en Ado.Net 2.0.
            </summary>
            <returns>True/False</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.Refrescar">
            <summary>
            Refresca la colección de tablas relacionadas, removiendo las filas y sus respectivas relaciones.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Command.TieneFilasHijas">
            <summary>
            Determina si la fila activa tiene relaciones descendientes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.DataBase">
            <summary>
            Obtiene o establece el nombre de la base de datos que utiliza el objeto.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.ICommand">
            <summary>
            Obtiene la Interfaz ICommand Activa.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.Tabla">
            <summary>
            Obtiene o establece el nombre de la tabla asociada al objeto.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.GetTabla">
            <summary>
            Obtiene el DataTable correspondiente al Command activo.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.PutCommand">
            <summary>
            Obtiene o establece el objeto SqlCommand dedicado a actualizaciones en la base de datos.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.GetCommand">
            <summary>
            Obtiene o establece el objeto SqlCommand dedicado a lecturas en la base de datos.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.DelCommand">
            <summary>
            Obtiene o establece el objeto SqlCommand dedicado a eliminaciones en la base de datos.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.DeltaKey">
            <summary>
            Obtiene o establece el PrimaryKey del parámetro utilizado en el DelCommand.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.GetPkId">
            <summary>
            Obtiene el valor del Id insertado.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.Fila">
            <summary>
            Obtiene o establece un objeto tipo DataRow de la tabla establecida en el Command.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.PkColumn">
            <summary>
            Obtiene o estable la Columna Pk del DataTable utilizado por el Command.
            A través de esta se realizan las conciliaciones de valores en las relaciones Master/Detail.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.Condicion">
            <summary>
            Obtiene o Establece la condición que será evaluada en el método FilaEncontrada.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Command.CondicionDelete">
            <summary>
            Obtiene o Establece la condición que será evaluada en el método TieneRelaciones.
            Esta condición se sobre pone a las relaciones establecidas por el objeto. En otras palabras,
            en caso de que sea implementada, las relaciones serán obviadas.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.XmlHistory.#ctor(Lrrc.Sys.Data.Connection@)">
            <summary>
            Crea una instancia del objeto Historial de Bases de Datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.XmlHistory.Buscar(System.Int32,System.Int16,System.Boolean,System.Boolean)">
            <summary>
            Método de búsqueda.
            </summary>
            <param name="XmlHistoryId">Código del Registro</param>
            <param name="UsuarioId">Códgo del Usuario</param>
            <param name="Activo">Estatus del Registro</param>
            <param name="UsarDataSet">Determina si la ejecución de lectura se hace contra el DataSet</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.XmlHistory.InitPutCommand">
            <summary>
            Inicializa el SqlCommand PutCommand para las actualizaciones a la Base de Datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.XmlHistory.InitGetCommand">
            <summary>
            Inicializa el SqlCommand GetCommand para la realización de búsquedas o acceso a la información.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.XmlHistory.XmlHistoryId">
            <summary>
            Obtiene o establece el valor de la Calificación Jurídica del GetCommand.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.XmlHistory.UsuarioId">
            <summary>
            Obtiene o establece el valor del código de usuario del GetCommand.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.XmlHistory.Activo">
            <summary>
            Obtiene o establece el el estatus del registro en la base de datos del GetCommand.
            </summary>
        </member>
        <member name="T:Lrrc.Sys.Data.HistoryDetalle">
            <summary>
            Administración de Historiales de Bases de Datos.
            Author: Luis R. Romero Castillo
            Owner: Luis R. Romero Castillo
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.HistoryDetalle.#ctor(Lrrc.Sys.Data.Connection@)">
            <summary>
            Crea una instancia del objeto Historial de Bases de Datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.HistoryDetalle.Buscar(System.Int32,System.Int16,System.Boolean,System.Boolean)">
            <summary>
            Método de búsqueda.
            </summary>
            <param name="XmlHistoryId">Código del Registro</param>
            <param name="UsuarioId">Códgo del Usuario</param>
            <param name="Activo">Estatus del Registro</param>
            <param name="UsarDataSet">Determina si la ejecución de lectura se hace contra el DataSet</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.HistoryDetalle.InitPutCommand">
            <summary>
            Inicializa el SqlCommand PutCommand para las actualizaciones a la Base de Datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.HistoryDetalle.InitGetCommand">
            <summary>
            Inicializa el SqlCommand GetCommand para la realización de búsquedas o acceso a la información.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.HistoryDetalle.XmlHistoryId">
            <summary>
            Obtiene o establece el valor de la Calificación Jurídica del GetCommand.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.HistoryDetalle.UsuarioId">
            <summary>
            Obtiene o establece el valor del código de usuario del GetCommand.
            </summary>
        </member>
        <member name="T:Lrrc.Sys.Data.Secuencia">
            <summary>
            Objeto para la creación de secuencias Ascii ordenadas ascendentemente.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Secuencia.#ctor">
            <summary>
            Constructor del objeto de secuencias Ascii ordenadas ascendentemente.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Secuencia.GetSecuencia(System.String)">
            <summary>
            Produce y retorna un arreglo alfanumérico de valores Ascii a partir de la descripción proporcionada.
            </summary>
            <param name="Descripcion">Descripción por Convertir</param>
            <returns>Byte[]</returns>
        </member>
        <member name="T:Lrrc.Sys.Data.Connection">
            <summary>
            Admnistrador de Conexiones a Base de Datos.
            Author: Luis R. Romero Castillo
            Owner: Luis R. Romero Castillo
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Connection.#ctor(System.String)">
            <summary>
            Crea una instancia tipo Connection.
            </summary>
            <param name="cnString">Connection String</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Connection.DataSetReset">
            <summary>
            Reconstruye el objeto DataSet en memoria.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Connection.Abrir">
            <summary>
            Abre una nueva conexión.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Connection.Cerrar">
            <summary>
            Cierra la conexión activa.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Connection.CrearTransaccion">
            <summary>
            Crea una instancia de transacción e inicia su vigencia.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Connection.CerrarTransaccion">
            <summary>
            Confirma la operación producida en el banco de datos, libera la memoria y destruye la instancia de 
            la transacción.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Connection.AbortarTransaccion">
            <summary>
            Rechaza la operación producida en el banco de datos, libera la memoria y destruye la instancia de 
            la transacción.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Connection.DataSet">
            <summary>
            Obtiene el objeto DataSet en memoria.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Connection.SessionId">
            <summary>
            Obtiene el Id de Sesión de Usuario.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Connection.Usuario">
            <summary>
            Obtiene o establece el Nombre de Usuario.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Connection.UsuarioId">
            <summary>
            Obtiene el o establece Codigo de Usuario.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Connection.Conexion">
            <summary>
            Obtiene la conexión activa.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Connection.GetTransaccion">
            <summary>
            Obtiene o establece la conexion Ado.Net Sql.
            </summary>
        </member>
        <member name="T:Lrrc.Sys.Data.Permute">
            <summary>
            Clase para permutación y combinación algebráica de cadenas de texto.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.#ctor">
            <summary>
            Contructor de la clase
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="cnString"></param>
            <param name="sp_GetPermutadas"></param>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.ArrayLength(System.Int32)">
            <summary>
            Establece la dimensión de un arreglo. En caso de que los tokens excedan la dimensión límite se fija.
            </summary>
            <param name="Longitud">Logintud de caracteres</param>
            <returns></returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.SwitchDigits(System.Int32[]@)">
            <summary>
            Intercambia las palabras.
            </summary>
            <param name="Arreglo">Arreglo de datos</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.AddElementValue(System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Agrega un elemento.
            </summary>
            <param name="Arreglo">Arreglo de datos</param>
            <param name="FromPosition">Posición inicial</param>
            <param name="ToPosition">Posición final</param>
            <param name="ValuePosition">Valor de la posición</param>
            <returns>Int32</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.FindValue(System.Int32[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Obtiene el valor en una posición del arreglo.
            </summary>
            <param name="Arreglo">Arreglo de datos</param>
            <param name="StartPosition">Posición inicial</param>
            <param name="EndPosition">Posición final</param>
            <param name="Value">Valor</param>
            <returns>Int32</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.RemoverAbreviaturas(System.String)">
            <summary>
            Obtiene el reemplazo de nombres propios en lugar de abreviaturas de los mismos.
            </summary>
            <param name="Descripcion">Texto a evaluar</param>
            <returns>String</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.GetPhonetic(System.String)">
            <summary>
            Obtiene el fonético de una cadena de caracteres suministrada.
            </summary>
            <param name="Descripcion">Cadena de caracteres.</param>
            <returns>String</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.ExecPermute(System.String)">
            <summary>
            Procesa, algebráicamente, un String y retorna una objeto ArrayList con las combinaciones permutadas.
            </summary>
            <param name="Descripcion">Texto por permutar y combinar</param>
            <returns>ArrayList</returns>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.setPermutacion(System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Constructor del permutador.
            </summary>
            <param name="cnString">String de Conexión</param>
            <param name="sp_GetPermutadas">Stored Procedure de Permutaciones</param>
            <param name="sTabla">Nombre de la Tabla</param>
            <param name="sCampo">Nombre de la Columna</param>
            <param name="iCampoVal">Nombre del Campo</param>
            <param name="sDescripcion">Descripción</param>
            <param name="gDelete">Stored Procedure de Eliminación</param>
        </member>
        <member name="M:Lrrc.Sys.Data.Permute.CargarEsquema">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lrrc.Sys.Data.Message">
            <summary>
            Clase para definición de mensajes de error previamente definidos.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_DataSet_Msg">
            <summary>
            Mensaje de control del DataSet.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_MissingsParams_Msg">
            <summary>
            Mensaje de control para parámetros faltantes.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_EmptyParams_Msg">
            <summary>
            Mensaje de control para parámetros faltantes.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_OpeningConnection_Msg">
            <summary>
            Mensaje de control para errores de intentos de conexión.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_ClosingConnection_Msg">
            <summary>
            Mensaje de control cuando se trata de cerrar una conexión.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_InsertingRow_Msg">
            <summary>
            Mensaje de control tratando de insertar un registro en el datase de memoria.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_DuplicatedRow_Msg">
            <summary>
            Mensaje de control tratando de insertar una fila existente, de acuerdo a la condición de evaluación,
            en el set de datos.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_RowDependencies_Msg">
            <summary>
            Mensaje de control cuando se trata de borrar una fila que tiene dependencias.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_EmptyCondition_Msg">
            <summary>
            Mensaje de control cuando la condición se encuentra vacía en el objeto de la capa de datos.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_LavePrimaria_Msg">
            <summary>
            Mensaje de control cuando la llave primera sufre alguna violación.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_Null_Msg">
            <summary>
            Mensaje de control cuando se trata de dejar una columna con un valor null no permitido.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_Cero_Msg">
            <summary>
            Mensaje de control cuando se trata de dejar una columna con un valor null o cero.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_DataSet">
            <summary>
            Número de control del DataSet.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_MissingsParams">
            <summary>
            Número de control para parámetros faltantes.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_EmptyParams">
            <summary>
            Número de control para parámetros faltantes.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_OpeningConnection">
            <summary>
            Número de control para errores de intentos de conexión.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_ClosingConnection">
            <summary>
            Número de control cuando se trata de cerrar una conexión.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_InsertingRow">
            <summary>
            Número de control tratando de insertar un registro en el datase de memoria.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_DuplicatedRow">
            <summary>
            Número de control tratando de insertar una fila existente, de acuerdo a la condición de evaluación,
            en el set de datos.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_RowDependencies">
            <summary>
            Número de control cuando se trata de borrar una fila que tiene dependencias.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_EmptyCondition">
            <summary>
            Número de control cuando la condición se encuentra vacía en el objeto de la capa de datos.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_LavePrimaria">
            <summary>
            Número de control cuando la llave primera sufre alguna violación.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_Null">
            <summary>
            Número de control cuando se trata de dejar una columna con un valor null no permitido.
            </summary>
        </member>
        <member name="F:Lrrc.Sys.Data.Message.Err_Cero">
            <summary>
            Número de control cuando se trata de dejar una columna con un valor null o cero.
            </summary>
        </member>
        <member name="T:Lrrc.Sys.Data.Logic">
            <summary>
            Clase abstracta para la definición y uso en la capa de negocios.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Logic.Sincronizar">
            <summary>
            Escribir la implementación de este método en las clases hijas en donde deberán de definirse
            la lógica y llamadas de actualización al motor de base de datos.
            </summary>
        </member>
        <member name="M:Lrrc.Sys.Data.Logic.Destruir">
            <summary>
            Escribir la implementación de este método en las clases hijas en donde deberán de definirse
            la lógica, destrucción y liberación de los objetos y data de la memoria.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Logic.GetConnection">
            <summary>
            Obtiene o establece el objeto Connection.
            </summary>
        </member>
        <member name="P:Lrrc.Sys.Data.Logic.GetTblLogic">
            <summary>
            Obtiene o establece el objeto DataTable de la capa de datos.
            </summary>
        </member>
    </members>
</doc>
